---
import { SITE_TITLE, SITE_DESCRIPTION } from "../consts";

export interface Props {
  title: string;
  description: string;
  image?: string;
}

const canonicalURL = new URL(Astro.url.pathname, Astro.site);

const { title = "Nathaniel Tampus", description = SITE_DESCRIPTION, image } = Astro.props;

const fullTitle = `${title} - ${SITE_TITLE}`;
---

<head>
  <!-- Global Metadata -->
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <meta name="generator" content={Astro.generator} />
  <meta name="color-scheme" content="dark light" />
  <link rel="sitemap" href="/sitemap-index.xml" />

  <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
  <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
  <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
  <link rel="manifest" href="/site.webmanifest" />
  <meta name="msapplication-TileColor" content="#fbf1c7" />
  <meta name="theme-color" content="#fbf1c7" />

  <!-- Canonical URL -->
  <link rel="canonical" href={canonicalURL} />

  <!-- Primary Meta Tags -->
  <title>{fullTitle}</title>
  <meta name="title" content={fullTitle} />
  <meta name="author" content="Nathaniel Tampus" />
  <meta name="description" content={description} />

  <!-- Open Graph / Facebook -->
  <meta property="og:type" content="website" />
  <meta property="og:url" content={Astro.url} />
  <meta property="og:title" content={fullTitle} />
  <meta property="og:description" content={description} />
  {image && <meta property="og:image" content={new URL(image, Astro.url)} />}

  <!-- Twitter -->
  <meta property="twitter:card" content="summary_large_image" />
  <meta property="twitter:url" content={Astro.url} />
  <meta property="twitter:title" content={fullTitle} />
  <meta property="twitter:description" content={description} />
  {image && <meta property="twitter:image" content={new URL(image, Astro.url)} />}

  <script is:inline>
    if (
      typeof localStorage !== "undefined" &&
      (localStorage.theme === "dark" ||
        (!localStorage.getItem("theme") &&
          window.matchMedia("(prefers-color-scheme: dark)").matches))
    ) {
      document.documentElement.classList.add("dark");
    } else {
      document.documentElement.classList.remove("dark");
    }
  </script>
</head>
